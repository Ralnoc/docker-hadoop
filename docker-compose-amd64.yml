version: '3.2'

services:
  namenode:
    platform: linux/amd64
    build:
      context: namenode
      args:
        BASE_IMAGE: hadoop-base:3.3.3-amd64
    restart: always
    ports:
      - 9870:9870
      - 9000:9000
    networks:
      - platform-manager
    volumes:
      - namenode:/hadoop/dfs/name
    environment:
      - CLUSTER_NAME=test
    env_file:
      - ./hadoop.env
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:9870" ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  datanode1:
    platform: linux/amd64
    build:
      context: datanode
      args:
        BASE_IMAGE: hadoop-base:3.3.3-amd64
    expose:
      - 9864
    ports:
      - 9164:9864
    depends_on:
      namenode:
        condition: service_healthy
        restart: true
    restart: always
    networks:
      - platform-manager
    env_file:
      - ./hadoop.env
    environment:
      SERVICE_PRECONDITION: "namenode:9870"
    healthcheck:
      test: [ "CMD", "nc", "-zv", "localhost", "9864" ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  datanode2:
    platform: linux/amd64
    build:
      context: datanode
      args:
        BASE_IMAGE: hadoop-base:3.3.3-amd64
    expose:
      - 9864
    ports:
      - 9264:9864
    depends_on:
      namenode:
        condition: service_healthy
        restart: true
    restart: always
    networks:
      - platform-manager
    env_file:
      - ./hadoop.env
    environment:
      SERVICE_PRECONDITION: "namenode:9870"
    healthcheck:
      test: [ "CMD", "nc", "-zv", "localhost", "9864" ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  datanode3:
    platform: linux/amd64
    build:
      context: datanode
      args:
        BASE_IMAGE: hadoop-base:3.3.3-amd64
    expose:
      - 9864
    ports:
      - 9364:9864
    depends_on:
      namenode:
        condition: service_healthy
        restart: true
    restart: always
    networks:
      - platform-manager
    env_file:
      - ./hadoop.env
    environment:
      SERVICE_PRECONDITION: "namenode:9870"
    healthcheck:
      test: [ "CMD", "nc", "-zv", "localhost", "9864" ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  datanode4:
    platform: linux/amd64
    build:
      context: datanode
      args:
        BASE_IMAGE: hadoop-base:3.3.3-amd64
    expose:
      - 9864
    ports:
      - 9464:9864
    depends_on:
      namenode:
        condition: service_healthy
        restart: true
    restart: always
    networks:
      - platform-manager
    env_file:
      - ./hadoop.env
    environment:
      SERVICE_PRECONDITION: "namenode:9870"
    healthcheck:
      test: [ "CMD", "nc", "-zv", "localhost", "9864" ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  datanode5:
    platform: linux/amd64
    build:
      context: datanode
      args:
        BASE_IMAGE: hadoop-base:3.3.3-amd64
    expose:
      - 9864
    ports:
      - 9564:9864
    depends_on:
      namenode:
        condition: service_healthy
        restart: true
    restart: always
    networks:
      - platform-manager
    env_file:
      - ./hadoop.env
    environment:
      SERVICE_PRECONDITION: "namenode:9870"
    healthcheck:
      test: [ "CMD", "nc", "-zv", "localhost", "9864" ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  leavesafemode:
    platform: linux/amd64
    image: hadoop-base:3.3.3-amd64
    restart: no
    networks:
      - platform-manager
    env_file:
      - ./hadoop.env
    environment:
      SERVICE_PRECONDITION: "namenode:9870"
    depends_on:
      namenode:
        condition: service_healthy
        restart: true
      datanode1:
        condition: service_healthy
        restart: true
      datanode2:
        condition: service_healthy
        restart: true
      datanode3:
        condition: service_healthy
        restart: true
      datanode4:
        condition: service_healthy
        restart: true
      datanode5:
        condition: service_healthy
        restart: true
    command: [ "hdfs", "dfsadmin", "-safemode", "leave"]

  resourcemanager:
    platform: linux/amd64
    build:
      context: resourcemanager
      args:
        BASE_IMAGE: hadoop-base:3.3.3-amd64
    restart: always
    networks:
      - platform-manager
    ports:
      - 8088:8088
      - 8030:8030
      - 8031:8031
      - 8032:8032
    depends_on:
      namenode:
        condition: service_healthy
        restart: true
      datanode1:
        condition: service_healthy
        restart: true
      datanode2:
        condition: service_healthy
        restart: true
      datanode3:
        condition: service_healthy
        restart: true
      datanode4:
        condition: service_healthy
        restart: true
      datanode5:
        condition: service_healthy
        restart: true
      leavesafemode:
        condition: service_completed_successfully
        restart: true
    environment:
      SERVICE_PRECONDITION: "namenode:9000 namenode:9870 datanode1:9864 datanode2:9864 datanode3:9864 datanode4:9864 datanode5:9864"
    env_file:
      - ./hadoop.env
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8088" ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  nodemanager1:
    platform: linux/amd64
    build:
      context: nodemanager
      args:
        BASE_IMAGE: hadoop-base:3.3.3-amd64
    restart: always
    networks:
      - platform-manager
    depends_on:
      namenode:
        condition: service_healthy
        restart: true
      resourcemanager:
        condition: service_healthy
        restart: true
      datanode1:
        condition: service_healthy
        restart: true
    environment:
      SERVICE_PRECONDITION: "namenode:9000 namenode:9870 datanode1:9864 resourcemanager:8088"
    env_file:
      - ./hadoop.env

  nodemanager2:
    platform: linux/amd64
    build:
      context: nodemanager
      args:
        BASE_IMAGE: hadoop-base:3.3.3-amd64
    restart: always
    networks:
      - platform-manager
    depends_on:
      namenode:
        condition: service_healthy
        restart: true
      resourcemanager:
        condition: service_healthy
        restart: true
      datanode2:
        condition: service_healthy
        restart: true
    environment:
      SERVICE_PRECONDITION: "namenode:9000 namenode:9870 datanode2:9864 resourcemanager:8088"
    env_file:
      - ./hadoop.env

  nodemanager3:
    platform: linux/amd64
    build:
      context: nodemanager
      args:
        BASE_IMAGE: hadoop-base:3.3.3-amd64
    restart: always
    networks:
      - platform-manager
    depends_on:
      namenode:
        condition: service_healthy
        restart: true
      resourcemanager:
        condition: service_healthy
        restart: true
      datanode3:
        condition: service_healthy
        restart: true
    environment:
      SERVICE_PRECONDITION: "namenode:9000 namenode:9870 datanode3:9864 resourcemanager:8088"
    env_file:
      - ./hadoop.env

  nodemanager4:
    platform: linux/amd64
    build:
      context: nodemanager
      args:
        BASE_IMAGE: hadoop-base:3.3.3-amd64
    restart: always
    networks:
      - platform-manager
    depends_on:
      namenode:
        condition: service_healthy
        restart: true
      resourcemanager:
        condition: service_healthy
        restart: true
      datanode4:
        condition: service_healthy
        restart: true
    environment:
      SERVICE_PRECONDITION: "namenode:9000 namenode:9870 datanode4:9864 resourcemanager:8088"
    env_file:
      - ./hadoop.env

  nodemanager5:
    platform: linux/amd64
    build:
      context: nodemanager
      args:
        BASE_IMAGE: hadoop-base:3.3.3-amd64
    restart: always
    networks:
      - platform-manager
    depends_on:
      namenode:
        condition: service_healthy
        restart: true
      resourcemanager:
        condition: service_healthy
        restart: true
      datanode5:
        condition: service_healthy
        restart: true
    environment:
      SERVICE_PRECONDITION: "namenode:9000 namenode:9870 datanode5:9864 resourcemanager:8088"
    env_file:
      - ./hadoop.env

  historyserver:
    platform: linux/amd64
    build:
      context: historyserver
      args:
        BASE_IMAGE: hadoop-base:3.3.3-amd64
    ports:
      - 8188:8188
    restart: no
    networks:
      - platform-manager
    depends_on:
      namenode:
        condition: service_healthy
        restart: true
      datanode1:
        condition: service_healthy
        restart: true
      datanode2:
        condition: service_healthy
        restart: true
      datanode3:
        condition: service_healthy
        restart: true
      datanode4:
        condition: service_healthy
        restart: true
      datanode5:
        condition: service_healthy
        restart: true
      resourcemanager:
        condition: service_healthy
        restart: true
    environment:
      SERVICE_PRECONDITION: "namenode:9000 namenode:9870 datanode1:9864 datanode2:9864 datanode3:9864 datanode4:9864 datanode5:9864 resourcemanager:8088"
    volumes:
      - hadoop_historyserver:/hadoop/yarn/timeline
    env_file:
      - ./hadoop.env
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8188" ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  hive-server:
    platform: linux/amd64
    build:
      context: hive/server
      args:
        BASE_IMAGE: hadoop-base:3.3.3-amd64
    ports:
      - "10000:10000"
    env_file:
      - ./hadoop.env
    networks:
      - platform-manager
    depends_on:
      namenode:
        condition: service_healthy
        restart: true
      hive-metastore:
        condition: service_healthy
        restart: true
    environment:
      SERVICE_PRECONDITION: "hive-metastore:9083 namenode:9000"
    healthcheck:
      test: [ "CMD", "nc", "-z", "localhost", "10000" ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  hive-metastore:
    platform: linux/amd64
    build:
      context: hive/database
      args:
        BASE_IMAGE: hadoop-base:3.3.3-amd64
    ports:
      - "9083:9083"
    env_file:
      - ./hadoop.env
    networks:
      - platform-manager
    command: /opt/hive/bin/hive --service metastore
    depends_on:
      namenode:
        condition: service_healthy
        restart: true
      datanode1:
        condition: service_healthy
        restart: true
      datanode2:
        condition: service_healthy
        restart: true
      datanode3:
        condition: service_healthy
        restart: true
      datanode4:
        condition: service_healthy
        restart: true
      datanode5:
        condition: service_healthy
        restart: true
      hive-metastore-mysql:
        condition: service_healthy
        restart: true
    environment:
      HIVE_VERSION: ${HIVE_VERSION}
      HIVE_CORE_CONF_javax_jdo_option_ConnectionURL: "jdbc:mysql://hive-metastore/metastore"
      SERVICE_PRECONDITION: "namenode:9000 datanode1:9864 datanode2:9864 datanode3:9864 datanode4:9864 datanode5:9864 hive-metastore-mysql:3306"
    healthcheck:
      test: [ "CMD", "nc", "-z", "localhost", "9083" ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  hive-metastore-mysql:
    platform: linux/amd64
    build:
      context: hivemysql
      args:
        BASE_IMAGE: mysql:latest
        HIVE_VERSION: ${HIVE_VERSION}
        METASTORE_ROOT_PASSWORD: ${METASTORE_ROOT_PASSWORD}
        METASTORE_DB_NAME: ${METASTORE_DB_NAME}
        METASTORE_DB_USER: ${METASTORE_DB_USER}
        METASTORE_DB_PASSWORD: ${METASTORE_DB_PASSWORD}
    networks:
      - platform-manager
    healthcheck:
      test: ["CMD", "mysqladmin" ,"ping", "-h", "localhost"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  spark-master:
    platform: linux/amd64
    build:
      context: spark/database
      args:
        BASE_IMAGE: hadoop-base:3.3.3-amd64
    ports:
      - "9083:9083"
    env_file:
      - ./hadoop.env
    networks:
      - platform-manager
    command: /opt/hive/bin/hive --service metastore
    depends_on:
      namenode:
        condition: service_healthy
        restart: true
      hive-server:
        condition: service_healthy
        restart: true
    environment:
      SERVICE_PRECONDITION: "namenode:9000 hive-server:10000"
    healthcheck:
      test: [ "CMD", "nc", "-z", "localhost", "8080" ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

volumes:
  datanode:
  namenode:
  hadoop_historyserver:

networks:
  platform-manager:
    name: platform-manager-network